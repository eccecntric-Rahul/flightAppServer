let express,mongoose,fs,cors,formidable,Amadeus;_ace‍.x([["default",()=>_ace‍.o]]);_ace‍.w("express",[["default",["express"],function(v){express=v}]]);_ace‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_ace‍.w("fs",[["default",["fs"],function(v){fs=v}]]);_ace‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_ace‍.w("express-formidable",[["default",["formidable"],function(v){formidable=v}]]);_ace‍.w("amadeus",[["default",["Amadeus"],function(v){Amadeus=v}]]);
const morgan = require("morgan");





require("dotenv").config();
const amadeus = new Amadeus({
    clientId: process.env.CLIENT_KEY,
    clientSecret: process.env.CLIENT_SECRET
  });

const app = express();
const port=process.env.PORT||8000;

app.use(cors());
app.use(morgan("dev"));
app.use(express.json());
app.use(formidable());

// db connection 
mongoose.connect(process.env.URI, { useNewUrlParser: true, useUnifiedTopology: true })
.then(()=>console.log("db connected"))
.catch((err)=>_ace‍.g.console.log(err));

app.get("/",(req,res)=>{req;res.status(400).send("server is running")});
fs.readdirSync("./routes").map((r)=>app.use("/api",require(`./routes/${r}`)));

app.listen(port,()=>console.log(`Server is running on Port ${port}`) );

_ace‍.d(amadeus);